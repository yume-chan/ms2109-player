{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx","App.module.css"],"names":["App","handleVideoRef","useCallback","videoElement","a","window","navigator","mediaDevices","getUserMedia","video","audio","getTracks","forEach","track","stop","enumerateDevices","devices","find","x","kind","label","endsWith","deviceId","exact","width","height","frameRate","groupId","stream","srcObject","className","styles","ref","autoPlay","controls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2OAoDeA,MAjDf,WACE,IAAMC,EAAiBC,sBAAW,uCAAC,WAAOC,GAAP,qBAAAC,EAAA,0DAC7BD,EAD6B,iCAGRE,OAAOC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IAHzD,qBAItBC,YAAYC,SAAQ,SAAAC,GAAK,OAAIA,EAAMC,UAJb,SAMTT,OAAOC,UAAUC,aAAaQ,mBANrB,cAMzBC,EANyB,OAOzBP,EAAQO,EAAQC,MAAK,SAAAC,GAAC,MAAe,eAAXA,EAAEC,MAAyBD,EAAEE,MAAMC,SAAS,kBACtEX,EAAQM,EAAQC,MAAK,SAAAC,GAAC,MAAe,eAAXA,EAAEC,MAAyBD,EAAEE,MAAMC,SAAS,kBAR7C,oBAWdhB,OAAOC,UAAUC,aAAaC,aAAa,CACxDC,MAAO,CACLa,SAAU,CAAEC,MAAOd,EAAOa,UAC1BE,MAAO,CAAED,MAAO,MAChBE,OAAQ,CAAEF,MAAO,MACjBG,UAAW,CAAEH,MAAO,KAEtBb,MAAO,CACLiB,QAAS,CACPJ,MAAOb,EAAOiB,YApBS,QAW7BC,EAX6B,2EAyBdvB,OAAOC,UAAUC,aAAaC,aAAa,CACxDC,MAAO,CACLa,SAAU,CAAEC,MAAOd,EAAOa,UAC1BE,MAAO,CAAED,MAAO,MAChBE,OAAQ,CAAEF,MAAO,MACjBG,UAAW,CAAEH,MAAO,KAEtBb,MAAO,CACLiB,QAAS,CACPJ,MAAOb,EAAOiB,YAlCS,QAyB7BC,EAzB6B,eAuC/BzB,EAAa0B,UAAYD,EAvCM,2DAAD,sDAyC/B,IAEH,OACE,uBAAOE,UAAWC,IAAOtB,MAAOuB,IAAK/B,EAAgBgC,UAAQ,EAACC,UAAQ,KClC3DC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,MAAQ,sB","file":"static/js/main.5ac5ed78.chunk.js","sourcesContent":["import { useCallback } from 'react';\nimport styles from './App.module.css';\n\nfunction App() {\n  const handleVideoRef = useCallback(async (videoElement: HTMLVideoElement | null) => {\n    if (videoElement) {\n      {\n        const stream = await window.navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n        stream.getTracks().forEach(track => track.stop());\n      }\n      const devices = await window.navigator.mediaDevices.enumerateDevices();\n      const video = devices.find(x => x.kind === 'videoinput' && x.label.endsWith('(534d:2109)'));\n      const audio = devices.find(x => x.kind === 'audioinput' && x.label.endsWith('(534d:2109)'));\n      let stream;\n      try {\n        stream = await window.navigator.mediaDevices.getUserMedia({\n          video: {\n            deviceId: { exact: video!.deviceId },\n            width: { exact: 1920 },\n            height: { exact: 1080 },\n            frameRate: { exact: 60 },\n          },\n          audio: {\n            groupId: {\n              exact: audio!.groupId\n            }\n          },\n        });\n      } catch {\n        stream = await window.navigator.mediaDevices.getUserMedia({\n          video: {\n            deviceId: { exact: video!.deviceId },\n            width: { exact: 1920 },\n            height: { exact: 1080 },\n            frameRate: { exact: 60 },\n          },\n          audio: {\n            groupId: {\n              exact: audio!.groupId\n            }\n          },\n        });\n      }\n      videoElement.srcObject = stream;\n    }\n  }, []);\n\n  return (\n    <video className={styles.video} ref={handleVideoRef} autoPlay controls></video>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"App_video__33LfF\"};"],"sourceRoot":""}